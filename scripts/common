# vim: syntax=sh
## Common script methods
#scriptPath=$(dirname $(dirname "$(readlink -f "$0")"))
#scriptPath=${ohREPOPATH}/scripts

installGNUScreenWithVerticalSplit(){
screenVersion=$(echo $($(which screen) --version) | awk '{print $3}' | tr -d [:alpha:][:punct:])
if [ ! $(which screen) ] || [ $screenVersion -lt 40201 ]
  then
  wget http://ftp.gnu.org/gnu/screen/screen-4.2.1.tar.gz && \
  tar -xf ~/screen-4.2.1.tar.gz && \
  mv ~/screen-4.2.1 ~/bin/screen-src && \
  autoreconf ~/bin/screen-src && \
  ~/bin/screen-src/configure --enable-colors256 && \
  make -C ~/bin/screen-src && \
  cp ~/bin/screen-src/screen ~/bin/ && \
  make clean -C ~/bin/screen-src && \
  rm -rf ~/comm.h ~/config.h ~/config.log ~/config.status ~/doc ~/kmapdef.c ~/Makefile  ~/osdef.h ~/screen-4.2.1.tar.gz ~/term.h
  fi
}

installColordiffFromGithub(){
  [ ! $(which colordiff) ] && \
  wget --no-check-certificate https://raw.github.com/daveewart/colordiff/current/colordiff.pl -O ~/bin/colordiff && chmod +x ~/bin/colordiff
}

installAckGrep(){
  [ -f ~/bin/ack ] && curl http://beyondgrep.com/ack-2.14-single-file > ~/bin/ack && chmod +x ~/bin/ack
}

installClc(){
  [ -f ~/bin/clc ] && printf "#!/bin/bash\nclear && printf '\033[3J'" >> ~/bin/clc && chmod +x ~/bin/clc
}

cloneVundlePluginManager(){
  [ ! -d ~/.vim/bundle/Vundle.vim ] && \
  git clone https://github.com/gmarik/Vundle.vim.git ~/.vim/bundle/Vundle.vim && \
  vim +PluginInstall +qall
}

defaultSshKeyName="id_rsa"
defaultSshKeyPath="$HOME/.ssh"

sshKeyGenerationWithDefaults(){
  ssh-keygen -f $defaultSshKeyPath/$defaultSshKeyName -N ""
  echoInfo "Copying $sshKeyName.pub key to authorized keys for $USER"
  cat ~/.ssh/id_rsa.pub >> ~/.ssh/authorized_keys
}

sshKeyGenerationProcedure(){
  if [ -f $defaultSshKeyPath/$defaultSshKeyName ]
    then
    echoWarn "File $defaultSshKeyPath/$defaultSshKeyName already exist... Manual SSH generation required!"
    ssh-keygen
  elif [ confirm "Do you want to generate SSH key with custom settings? [y/N]" ]
    then
    sshKeyGenerationWithDefaults
  fi
}

